package com.generation.blogPessoal.config;

import java.util.ArrayList;
import java.util.List;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;

import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.builders.ResponseBuilder;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.service.Contact;
import springfox.documentation.service.Response;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;

//configuração swagger
@Configuration
public class SwaggerConfig 
{
	@Bean
	public Docket api()
	{
		return new Docket(DocumentationType.SWAGGER_2)
				.select()
				.apis(RequestHandlerSelectors.basePackage("com.generation.blogPessoal.controller"))
				.paths(PathSelectors.any())
				.build()
				.apiInfo(metaData())
				//n queremos respostas padrões
				.useDefaultResponseMessages(false)
				//para setar novas mensagens ao metodo get
				.globalResponses(HttpMethod.GET, null);
	}
	
	//Header da aplicação
	public ApiInfo metaData ()
	{
		return new ApiInfoBuilder()
				.title("API - Blog Pessoal")
				.description("Projeto API Spring - Blog Pessoal")
				.version("1.0.0")
				.license("Apache license Version 2.0")
				.license("http://localhost:8080/swagger-ui/")
				.contact(contact()).build();
	}
	
	private Contact contact ()
	{
		return new Contact ("Juliana Ribeiro", "https://github.com/JuRibeiro",
				"ju.ribeiro1208@gmail.com");
	}
	
	//setando as mensagens que eu quero q apareça
	private List<Response> responseMessageForget()
	{
		//como se fosse um construtor , mas não é /classe de array list
		return new ArrayList<Response>()  //classe anonima
				{
			//essa classe herda de array list
			//essa classe implementa o serial Version
					private static final long serialVersionUID = 1L;
					{
						add(new ResponseBuilder().code("200")
								.description("Sucesso!").build());
						
						add(new ResponseBuilder().code("201")
								.description("Objeto Criado!").build());
						
						add(new ResponseBuilder().code("401")
								.description("Não Autorizado!").build());
						
						add(new ResponseBuilder().code("403")
								.description("Proibido!").build());
						
						add(new ResponseBuilder().code("404")
								.description("Não Encontrado!").build());
						
						add(new ResponseBuilder().code("500")
								.description("Erro!").build());
						
					}
					
				};
	}

}
