package com.generation.redeSocialG2.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.generation.redeSocialG2.model.UsuarioModel;
import com.generation.redeSocialG2.repository.UsuarioRepository;

@Service
public class UsuarioService 
{
	@Autowired
	private UsuarioRepository repository;
	
	// aqui utilizamos o optional para nao cadastrar o mesmo user 2 vezes 
	public Optional<UsuarioModel> cadastrarUsuario (UsuarioModel user)
	{
		if (repository.findByUsuario(user.getEmail()).isPresent())
		{
			return null;
			// da pra por uma mensagem de 'email ja cadastrado' ?
		}
		//instanciando a criptografia
		BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();
		//tem como fazer essa variação aqui ??
		//encoder = (BCryptPasswordEncoder::new);
		String senhaEncoder = encoder.encode(user.getSenha());
		user.setSenha(senhaEncoder);
		return Optional.of(repository.save(user));
	}
	

}
